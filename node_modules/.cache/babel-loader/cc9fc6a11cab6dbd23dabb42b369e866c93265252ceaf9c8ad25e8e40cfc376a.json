{"ast":null,"code":"export const formatCurrency = (amount, showSymbol = true) => {\n  const formatted = new Intl.NumberFormat(\"en-IN\", {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(amount);\n  return showSymbol ? `₹${formatted}` : formatted;\n};\nexport const formatPercentage = (value, showSign = true) => {\n  const sign = showSign && value > 0 ? \"+\" : \"\";\n  return `${sign}${value.toFixed(2)}%`;\n};\nexport const formatNumber = num => {\n  if (num >= 10000000) {\n    return `${(num / 10000000).toFixed(1)}Cr`;\n  } else if (num >= 100000) {\n    return `${(num / 100000).toFixed(1)}L`;\n  } else if (num >= 1000) {\n    return `${(num / 1000).toFixed(1)}K`;\n  }\n  return num.toString();\n};\nexport const getChangeClass = value => {\n  if (value > 0) return \"positive\";\n  if (value < 0) return \"negative\";\n  return \"neutral\";\n};\nexport const formatDate = date => {\n  return new Intl.DateTimeFormat(\"en-IN\", {\n    day: \"2-digit\",\n    month: \"short\",\n    year: \"numeric\"\n  }).format(new Date(date));\n};\nexport const formatTime = date => {\n  return new Intl.DateTimeFormat(\"en-IN\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    hour12: true\n  }).format(new Date(date));\n};","map":{"version":3,"names":["formatCurrency","amount","showSymbol","formatted","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","formatPercentage","value","showSign","sign","toFixed","formatNumber","num","toString","getChangeClass","formatDate","date","DateTimeFormat","day","month","year","Date","formatTime","hour","minute","hour12"],"sources":["/app/code/src/utils/formatters.js"],"sourcesContent":["export const formatCurrency = (amount, showSymbol = true) => {\n  const formatted = new Intl.NumberFormat(\"en-IN\", {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }).format(amount);\n\n  return showSymbol ? `₹${formatted}` : formatted;\n};\n\nexport const formatPercentage = (value, showSign = true) => {\n  const sign = showSign && value > 0 ? \"+\" : \"\";\n  return `${sign}${value.toFixed(2)}%`;\n};\n\nexport const formatNumber = (num) => {\n  if (num >= 10000000) {\n    return `${(num / 10000000).toFixed(1)}Cr`;\n  } else if (num >= 100000) {\n    return `${(num / 100000).toFixed(1)}L`;\n  } else if (num >= 1000) {\n    return `${(num / 1000).toFixed(1)}K`;\n  }\n  return num.toString();\n};\n\nexport const getChangeClass = (value) => {\n  if (value > 0) return \"positive\";\n  if (value < 0) return \"negative\";\n  return \"neutral\";\n};\n\nexport const formatDate = (date) => {\n  return new Intl.DateTimeFormat(\"en-IN\", {\n    day: \"2-digit\",\n    month: \"short\",\n    year: \"numeric\",\n  }).format(new Date(date));\n};\n\nexport const formatTime = (date) => {\n  return new Intl.DateTimeFormat(\"en-IN\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    hour12: true,\n  }).format(new Date(date));\n};\n"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAGA,CAACC,MAAM,EAAEC,UAAU,GAAG,IAAI,KAAK;EAC3D,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IAC/CC,qBAAqB,EAAE,CAAC;IACxBC,qBAAqB,EAAE;EACzB,CAAC,CAAC,CAACC,MAAM,CAACP,MAAM,CAAC;EAEjB,OAAOC,UAAU,GAAG,IAAIC,SAAS,EAAE,GAAGA,SAAS;AACjD,CAAC;AAED,OAAO,MAAMM,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,GAAG,IAAI,KAAK;EAC1D,MAAMC,IAAI,GAAGD,QAAQ,IAAID,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE;EAC7C,OAAO,GAAGE,IAAI,GAAGF,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,GAAG;AACtC,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,GAAG,IAAK;EACnC,IAAIA,GAAG,IAAI,QAAQ,EAAE;IACnB,OAAO,GAAG,CAACA,GAAG,GAAG,QAAQ,EAAEF,OAAO,CAAC,CAAC,CAAC,IAAI;EAC3C,CAAC,MAAM,IAAIE,GAAG,IAAI,MAAM,EAAE;IACxB,OAAO,GAAG,CAACA,GAAG,GAAG,MAAM,EAAEF,OAAO,CAAC,CAAC,CAAC,GAAG;EACxC,CAAC,MAAM,IAAIE,GAAG,IAAI,IAAI,EAAE;IACtB,OAAO,GAAG,CAACA,GAAG,GAAG,IAAI,EAAEF,OAAO,CAAC,CAAC,CAAC,GAAG;EACtC;EACA,OAAOE,GAAG,CAACC,QAAQ,CAAC,CAAC;AACvB,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIP,KAAK,IAAK;EACvC,IAAIA,KAAK,GAAG,CAAC,EAAE,OAAO,UAAU;EAChC,IAAIA,KAAK,GAAG,CAAC,EAAE,OAAO,UAAU;EAChC,OAAO,SAAS;AAClB,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAIC,IAAI,IAAK;EAClC,OAAO,IAAIf,IAAI,CAACgB,cAAc,CAAC,OAAO,EAAE;IACtCC,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE;EACR,CAAC,CAAC,CAACf,MAAM,CAAC,IAAIgB,IAAI,CAACL,IAAI,CAAC,CAAC;AAC3B,CAAC;AAED,OAAO,MAAMM,UAAU,GAAIN,IAAI,IAAK;EAClC,OAAO,IAAIf,IAAI,CAACgB,cAAc,CAAC,OAAO,EAAE;IACtCM,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE;EACV,CAAC,CAAC,CAACpB,MAAM,CAAC,IAAIgB,IAAI,CAACL,IAAI,CAAC,CAAC;AAC3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}